% Generated by roxygen2 (4.0.1): do not edit by hand
\name{register_options}
\alias{register_options}
\title{Register an option set}
\usage{
register_options(name, defaults = list())
}
\arguments{
\item{name}{name of option set}

\item{defaults}{list of default options}
}
\description{
The function \code{register_options} sets up a new options register. It returns
a function that can be uset to set, get, or reset options; or to return a reference to
the options register or to clone the options reference alltogether.
}
\examples{
# create an options register
my_options <- register_options('myopt',defaults=list(foo=1,bar=2,baz='bob'))

### Retrieving global options
my_options() # retrieve the full options list.
my_options('baz')
my_options('foo')

# When multiple options are retrieved, the result is simplified unless specified otherwise:
my_options('foo','baz')
my_options('foo','baz',simplify=FALSE)

### Setting global options
my_options(foo=3,baz='pete')
my_options()

### Create a clone of global options and locally change settings
op <- my_options(clone=TRUE)
## Retrieving local options
my_options(where=op)
my_options('foo','baz',where=op)

## Setting local options
my_options(foo=12,where=op)
my_options('foo',where=op)
# check that global options are unaltered
my_options('foo')

### Create a reference to (global) options
op_ref <- my_options(ref=TRUE)
my_options(foo=0,where=op_ref)
my_options('foo',where=op_ref) #warning: this changes global settings!
my_options('foo')
}

